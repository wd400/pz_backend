version: '3'

volumes:
  db:
    driver: local 
  certbot_conf:



services:
  certbot:
    build: ./certbot
    volumes:
      - certbot_conf:/etc/letsencrypt/
    ports:
      - "80:80"
    restart: always
    depends_on:
      - duckdns

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - TZ=Europe/Paris
      - SUBDOMAINS=promptzoo.duckdns.org
      - TOKEN=1028ee5e-bdda-4ea3-84e5-0d83fccdcf5a
    restart: unless-stopped

  web:
    build: ./web
    env_file:
      - .env
    restart:
      on-failure
    volumes:
      - ./web:/app
      - certbot_conf:/etc/letsencrypt/
    ports:
#      - "8989:8989"
      - "443:443"
 #     - "8000:8000"
    depends_on:
      - mongodb
      - certbot
    command: bash -c "
      uvicorn greens.main:app
      --host 0.0.0.0 --port 443
      --lifespan=on --use-colors --loop uvloop 
      --log-config=log-conf.yaml
      --ssl-keyfile=/etc/letsencrypt/live/api.promptzoo.com/privkey.pem
      --ssl-certfile=/etc/letsencrypt/live/api.promptzoo.com/fullchain.pem
      --reload
      "
      # --log-level trace
    # --http httptools  --ssl-keyfile=/etc/letsencrypt/live/api.promptzoo.com/privkey.pem
    #  --ssl-certfile=/etc/letsencrypt/live/api.promptzoo.com/fullchain.pem
      #   

   # network_mode: "host"

  mongodb:
    build:
      context: ./mongo/
  #  network_mode: "host"
    volumes:
      - db:/data/db
   #   - ./security.keyFile:/tmp/security.keyFile
    #  - ./init-mongo.js:/docker-entrypoint-initdb.d/init.js:ro
    restart:
      on-failure
    env_file:
      - .env
    healthcheck:
      test: |
        test $$(mongosh --quiet -u $${MONGO_INITDB_ROOT_USERNAME}  -p $${MONGO_INITDB_ROOT_PASSWORD} --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: '127.0.0.1' }] }).ok } catch (_) { rs.status().ok }") -eq 1
   #   test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 30s
 
    ports:
      - "27017:27017"
    environment:
      - "MONGO_INITDB_DATABASE=${MONGO_DB}"
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}"
  #  command: "--logpath /dev/null  --replSet=rs0  --keyFile /keyfile "


